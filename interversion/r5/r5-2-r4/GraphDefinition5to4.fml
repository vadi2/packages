/// url = 'http://hl7.org/fhir/StructureMap/GraphDefinition5to4'
/// name = 'GraphDefinition5to4'
/// title = 'FML Conversion for GraphDefinition: R5 to R4'

conceptmap "CompartmentCode" {
  prefix s = "http://hl7.org/fhir/compartment-type"
  prefix t = "http://hl7.org/fhir/4.0/compartment-type"

  s:"Patient" - t:"Patient"
  s:"Encounter" - t:"Encounter"
  s:"RelatedPerson" - t:"RelatedPerson"
  s:"Practitioner" - t:"Practitioner"
  s:"Device" - t:"Device"
  s:"EpisodeOfCare" - t:"EpisodeOfCare"
}

conceptmap "GraphCompartmentRule" {
  prefix s = "http://hl7.org/fhir/graph-compartment-rule"
  prefix t = "http://hl7.org/fhir/4.0/graph-compartment-rule"

  s:"identical" - t:"identical"
  s:"matching" - t:"matching"
  s:"different" - t:"different"
  s:"custom" - t:"custom"
}

conceptmap "GraphCompartmentUse" {
  prefix s = "http://hl7.org/fhir/graph-compartment-use"
  prefix t = "http://hl7.org/fhir/4.0/graph-compartment-use"

  s:"where" - t:"where"
  s:"requires" - t:"requires"
}

conceptmap "PublicationStatus" {
  prefix s = "http://hl7.org/fhir/publication-status"
  prefix t = "http://hl7.org/fhir/4.0/publication-status"

  s:"draft" - t:"draft"
  s:"active" - t:"active"
  s:"retired" - t:"retired"
  s:"unknown" - t:"unknown"
}

uses "http://hl7.org/fhir/StructureDefinition/GraphDefinition" alias GraphDefinitionR5 as source
uses "http://hl7.org/fhir/4.0/StructureDefinition/GraphDefinition" alias GraphDefinitionR4 as target

imports "http://hl7.org/fhir/StructureMap/*5to4"

group GraphDefinition(source src : GraphDefinitionR5, target tgt : GraphDefinitionR4) extends DomainResource <<type+>> {
  src.url -> tgt.url;
  src.identifier -> tgt.identifier;
  src.version -> tgt.version;
  src.versionAlgorithm : string -> tgt.versionAlgorithm;
  src.versionAlgorithm : Coding -> tgt.versionAlgorithm;
  src.name -> tgt.name;
  src.title -> tgt.title;
  src.status as v -> tgt.status = translate(v, '#PublicationStatus', 'code');
  src.experimental -> tgt.experimental;
  src.date -> tgt.date;
  src.publisher -> tgt.publisher;
  src.contact -> tgt.contact;
  src.description -> tgt.description;
  src.useContext -> tgt.useContext;
  src.jurisdiction -> tgt.jurisdiction;
  src.purpose -> tgt.purpose;
  src.copyright -> tgt.copyright;
  src.copyrightLabel -> tgt.copyrightLabel;
  src.start -> tgt.start;
  src.node as s -> tgt.node as t then GraphDefinitionNode(s,t);
  src.link as s -> tgt.link as t then GraphDefinitionLink(s,t);
}

group GraphDefinitionNode(source src, target tgt) extends BackboneElement {
  src.nodeId -> tgt.nodeId;
  src.description -> tgt.description;
  src.type -> tgt.type;
  src.profile -> tgt.profile;
}

group GraphDefinitionLink(source src, target tgt) extends BackboneElement {
  src.description -> tgt.description;
  src.min -> tgt.min;
  src.max -> tgt.max;
  src.sourceId -> tgt.sourceId;
  src.path -> tgt.path;
  src.sliceName -> tgt.sliceName;
  src.targetId -> tgt.targetId;
  src.params -> tgt.params;
  src.compartment as s -> tgt.compartment as t then GraphDefinitionLinkCompartment(s,t);
}

group GraphDefinitionLinkCompartment(source src, target tgt) extends BackboneElement {
  src.use as v -> tgt.use = translate(v, '#GraphCompartmentUse', 'code');
  src.rule as v -> tgt.rule = translate(v, '#GraphCompartmentRule', 'code');
  src.code as v -> tgt.code = translate(v, '#CompartmentCode', 'code');
  src.expression -> tgt.expression;
  src.description -> tgt.description;
}

